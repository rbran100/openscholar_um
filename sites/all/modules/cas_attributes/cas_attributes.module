<?php

/**
 * @file
 * Allows user account and profile attributes to be automatically populated
 * using tokens. Provides basic tokens for attributes returned by the CAS
 * server.
 */

/**
 * Implements hook_menu().
 */
function cas_attributes_menu() {
  $items = array();

  $items['admin/config/people/cas/attributes'] = array(
    'title' => 'Attributes',
    'description' => 'Manage the relationships between CAS attributes and user fields.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cas_attributes_admin_settings'),
    'access arguments' => array('administer cas'),
    'file' => 'cas_attributes.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
  );
  $items['admin/config/people/cas/attributes/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/config/people/cas/attributes/cas'] = array(
    'title' => 'CAS Attribute Tokens',
    'description' => 'Get a list of all available CAS Attributes',
    'page callback' => 'cas_attributes_list',
    'access arguments' => array('administer cas'),
    'file' => 'cas_attributes.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
  );

  return $items;
}

/**
 * Implements hook_cas_user_presave().
 */
function cas_attributes_cas_user_presave(&$edit, $account) {
  $cas_attributes = variable_get('cas_attributes', array());
  $cas_attributes += array('overwrite' => TRUE, 'sync_every_login' => NULL, 'relations' => array('mail' => NULL, 'name' => NULL), 'roles' => array('manage' => array(), 'mapping' => ''));

  // We synchronize on the first login (always) and on future logins (if chosen).
  if ($account->login && !$cas_attributes['sync_every_login']) {
    // The user has logged in before and we are not set to always synchronize.
    return;
  }

  $data = array('cas' => $edit['cas_user']['name']);

  // Set each drupal field to its mapped attribute.
  foreach ($cas_attributes['relations'] as $drupal_field => $text) {
    $result = trim(token_replace($text, $data, array('clear' => TRUE)));
    $result = html_entity_decode($result);

    // Only update the fields if there is data to set.
    if (!empty($result)) {
      if ($drupal_field == 'name' || $drupal_field == 'mail') {
        // Only update field if overwrite setting is on, or if it is empty.
        if ($cas_attributes['overwrite'] || empty($account->{$drupal_field})) {
          $edit[$drupal_field] = $result;
        }
      }
      else {
        // Only update field if overwrite setting is on, or if it is empty.
        if ($cas_attributes['overwrite'] || empty($account->{$drupal_field})) {
          $edit[$drupal_field][LANGUAGE_NONE][0]['value'] = $result;
        }
      }
    }
  }

  // Manage Roles

  // Make sure there are attributes to check.
  if (!empty($cas_attributes['roles']['mapping'])) {
    // Get the users attributes.
      //die($cas_attributes['roles']['mapping']);
      //RESULT: edupersonaffiliation
      
    $user_attributes = cas_phpcas_attributes($data['cas']);
    //die("<pre>" . print_r($user_attributes,1) . "</pre>");
    //RESULT: edupersonaffiliate=staff,sn=Green,givenName=Bryan
    //
    //that is: $user_attributes['edupersonaffiliate'] = staff
    //
    // Allow other modules to manipulate the attribute values.
    // Can't use module_invoke_all() because we need to pass byref.
    $arguments = array(&$user_attributes);
    //die("<pre>" . print_r($arguments,1) . "</pre>");
    //RESULT: same as $user_attibutes
    
    //foreach (module_implements('cas_attributes_roles_modify') as $module) {
      //$function_list .= $module;
      //$function = $module . '_cas_attributes_roles_modify';
      //call_user_func_array($function, $arguments);
    //}
    //die("function list:<br/><pre>" . print_r($function_list,1) . "</pre>");
    //RESULT: nothing
    
    // Build all the attributes to check.
    $cas_user_roles = array();
    
    
    $attributes_to_check = explode("\n", $cas_attributes['roles']['mapping']);
    //die("Atts to check:<br/><pre>" . print_r($attributes_to_check,1) . "</pre>");
    //RESULT: 0=>eduPersonAffiliation, 1=>empty
    //$attributes_to_check[0] = eduPersonAffiliation
    //die(var_dump($user_attributes) . "<br/><br/>" . var_dump($attributes_to_check));
    foreach ($attributes_to_check as $attribute) {
        //die (var_dump($user_attributes[$attribute]));
        if (!empty($user_attributes[$attribute])) {
         // die("user attribute<br/><br/><pre>" . print_r($attribute,1) . "</pre>");
          //RESULT:edupersonaffiliation
          //die(var_dump($user_attributes));
        if (is_array($user_attributes[$attribute])) {
          $cas_user_roles = array_merge($cas_user_roles, $user_attributes[$attribute]);
        }
        else {
          $cas_user_roles[] = $user_attributes[$attribute];
        }
      }
    }
    
    
    //*****LOOK AT THIS*******//
    
    // die("CAS user roles:<br/><pre>" . print_r($cas_user_roles,1) . "</pre>");
    //RESULT:  empty array  
    
    // Loop through all the managed roles and see if the user has access to them
    // and set accordingly.
    $roles = user_roles();
    //die("ROLES:<br/><br/><pre>" . print_r($roles, 1) . "</pre>");
    //RESULT: Array
//(
//    [1] => anonymous user
//    [2] => authenticated user
//    [3] => administrator
//    [4] => manager
//    [5] => vsite admin
//    [6] => faculty
//    [7] => staff
//)
    //die("<pre>" . print_r($cas_attributes['roles']['manage'], 1) . "</pre>");
    //RESULT:
    //Array
//(
//    [7] => 7
//    [3] => 0
//    [6] => 0
//    [4] => 0
//    [5] => 0
//)
  
    foreach ($cas_attributes['roles']['manage'] as $rid) {
      if (!empty($rid)) {

          //die("roles->rid: " . $roles[$rid] . " user_att->edupersonaff: " . $user_attributes['eduPersonAffiliation']);
          //result: user_attributes->edupersonaffiliate is EMPTY
         //die("<pre>" . print_r($roles[$rid],1) . "<br/>" . $user_attributes['eduPersonAffiliation'] . "</pre>");
          //RESULT: staff staff
          //die ($user_attributes['eduPersonAffiliation']);
          //RESULT: staff
          //die ("Type: " . gettype($user_attributes['eduPersonAffiliation']) . "<br/>Value: " . $user_attributes['eduPersonAffiliation'] );
//         if (gettype($user_attributes['eduPersonAffiliation']) == 'string'){
//             $affils = explode( ',', $user_attributes['eduPersonAffiliation']);
//         }else{
//             $affils = $user_attributes['eduPersonAffiliation'];
//         }
         //die(var_dump($affils));
         //
          //die(var_dump($cas_user_roles));
         if (in_array($roles[$rid], $cas_user_roles)) { 
         //if (in_array($roles[$rid], $affils)) {   
             //die("the role is in the array");
             $edit['roles'][$rid] = $roles[$rid];
        }
        else {
          unset($edit['roles'][$rid]);
        }
      }
    }
  }
}
